PS C:\Users\Leandro Maciel\Documents\operandi> # =========================
PS C:\Users\Leandro Maciel\Documents\operandi> # Operandi · Fix package.json + Deploy + Verificación
PS C:\Users\Leandro Maciel\Documents\operandi> # =========================
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # 0) Ir SIEMPRE al proyecto
PS C:\Users\Leandro Maciel\Documents\operandi> cd "C:\Users\Leandro Maciel\Documents\operandi"
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # 1) Cargar package.json, quitar BOM si existe y actualizar scripts de build
PS C:\Users\Leandro Maciel\Documents\operandi> $pkgPath = ".\package.json"
PS C:\Users\Leandro Maciel\Documents\operandi> if (-not (Test-Path $pkgPath)) { throw "No existe package.json" }
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Leer, quitar BOM y parsear
PS C:\Users\Leandro Maciel\Documents\operandi> $text = Get-Content $pkgPath -Raw
PS C:\Users\Leandro Maciel\Documents\operandi> # eliminar U+FEFF (BOM) si estuviera
PS C:\Users\Leandro Maciel\Documents\operandi> $text = $text.TrimStart([char]0xFEFF)
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # A JSON
PS C:\Users\Leandro Maciel\Documents\operandi> $pkg = $text | ConvertFrom-Json
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Asegurar sección scripts
PS C:\Users\Leandro Maciel\Documents\operandi> if (-not $pkg.scripts) { $pkg | Add-Member -MemberType NoteProperty -Name scripts -Value (@{}) }
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Scripts recomendados para Vercel + Prisma
PS C:\Users\Leandro Maciel\Documents\operandi> $pkg.scripts.postinstall = "prisma generate"
Excepción al establecer "postinstall": "La propiedad 'postinstall' no se encuentra en este objeto. Compruebe que la propiedad existe y se puede
establecer."
En línea: 1 Carácter: 1
+ $pkg.scripts.postinstall = "prisma generate"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], SetValueInvocationException
    + FullyQualifiedErrorId : ExceptionWhenSetting

PS C:\Users\Leandro Maciel\Documents\operandi> $pkg.scripts.build       = "prisma generate && next build --turbopack"
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Guardar SIN BOM (UTF-8)
PS C:\Users\Leandro Maciel\Documents\operandi> $utf8NoBom = New-Object System.Text.UTF8Encoding($false)
PS C:\Users\Leandro Maciel\Documents\operandi> ([System.Text.Json.JsonSerializer]::Serialize($pkg,[System.Text.Json.JsonSerializerOptions]@{WriteIndented=$true})) `
>> | Out-Null; # no-op: asegura carga de System.Text.Json
No se encuentra el tipo [System.Text.Json.JsonSerializer].
En línea: 1 Carácter: 2
+ ([System.Text.Json.JsonSerializer]::Serialize($pkg,[System.Text.Json. ...
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Text.Json.JsonSerializer:TypeName) [], RuntimeException
    + FullyQualifiedErrorId : TypeNotFound

PS C:\Users\Leandro Maciel\Documents\operandi> $pretty = $pkg | ConvertTo-Json -Depth 100
PS C:\Users\Leandro Maciel\Documents\operandi> [IO.File]::WriteAllText($pkgPath, $pretty, $utf8NoBom)
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Validar que quedó JSON correcto
PS C:\Users\Leandro Maciel\Documents\operandi> (Get-Content $pkgPath -Raw | ConvertFrom-Json) | Out-Null
PS C:\Users\Leandro Maciel\Documents\operandi> Write-Host "✅ package.json sin BOM y scripts de build actualizados." -ForegroundColor Green
✅ package.json sin BOM y scripts de build actualizados.
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # 2) Commit + push (dispara deploy vía GitHub)
PS C:\Users\Leandro Maciel\Documents\operandi> git add package.json
PS C:\Users\Leandro Maciel\Documents\operandi> git commit -m "build(vercel): postinstall prisma generate + build robusto" 2>$null
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   logs.txt
        modified:   package-lock.json

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> $branch = (& git rev-parse --abbrev-ref HEAD 2>$null).Trim()
PS C:\Users\Leandro Maciel\Documents\operandi> if (-not $branch) { $branch = "master"; git checkout -b $branch }
PS C:\Users\Leandro Maciel\Documents\operandi> git push -u origin $branch
branch 'master' set up to track 'origin/master'.
Everything up-to-date
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # 3) (Opcional pero recomendado) Deploy directo con Vercel CLI
PS C:\Users\Leandro Maciel\Documents\operandi> if (-not (Get-Command vercel -ErrorAction SilentlyContinue)) {
>>   npm i -g vercel | Out-Null
>> }
PS C:\Users\Leandro Maciel\Documents\operandi> # login si es necesario
PS C:\Users\Leandro Maciel\Documents\operandi> vercel whoami 1>$null 2>$null; if ($LASTEXITCODE -ne 0) { vercel login }
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # vincular proyecto si no estuviera
PS C:\Users\Leandro Maciel\Documents\operandi> vercel link --project operandi --yes
Vercel CLI 46.0.2
✅  Linked to leandrotvrs-projects/operandi (created .vercel)
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # deploy a producción
PS C:\Users\Leandro Maciel\Documents\operandi> vercel deploy --prod --yes
Vercel CLI 46.0.2
Error: Could not read C:\Users\Leandro Maciel\Documents\operandi\package.json: Unexpected token '﻿', "﻿{
    "n"... is not valid JSON.
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # 4) Verificar deployments y abrir el más reciente
PS C:\Users\Leandro Maciel\Documents\operandi> Write-Host "`n=== Deployments recientes ===" -ForegroundColor Cyan

=== Deployments recientes ===
PS C:\Users\Leandro Maciel\Documents\operandi> $ls = vercel ls operandi
Vercel CLI 46.0.2
> Deployments for leandrotvrs-projects/operandi [337ms]

  Age     Deployment                                                     Status      Environment     Duration     Username
  3m      https://operandi-pb1np7udy-leandrotvrs-projects.vercel.app     ● Error     Production      2s           leandrotvr
  7m      https://operandi-1s5tsrbia-leandrotvrs-projects.vercel.app     ● Error     Production      2s           leandrotvr
  12m     https://operandi-n2rb1n062-leandrotvrs-projects.vercel.app     ● Error     Production      42s          leandrotvr
  12m     https://operandi-m7j7zbh8f-leandrotvrs-projects.vercel.app     ● Error     Production      40s          leandrotvr
  23m     https://operandi-aj3w6wkgj-leandrotvrs-projects.vercel.app     ● Error     Production      46s          leandrotvr
  32m     https://operandi-3pd8hj5iv-leandrotvrs-projects.vercel.app     ● Error     Production      46s          leandrotvr
  35m     https://operandi-o5f2wlp6p-leandrotvrs-projects.vercel.app     ● Error     Production      46s          leandrotvr
  44m     https://operandi-juk2huguk-leandrotvrs-projects.vercel.app     ● Error     Production      43s          leandrotvr
  1h      https://operandi-5p6lhjrti-leandrotvrs-projects.vercel.app     ● Error     Production      44s          leandrotvr

PS C:\Users\Leandro Maciel\Documents\operandi> $ls | Out-Host
https://operandi-pb1np7udy-leandrotvrs-projects.vercel.app
https://operandi-1s5tsrbia-leandrotvrs-projects.vercel.app
https://operandi-n2rb1n062-leandrotvrs-projects.vercel.app
https://operandi-m7j7zbh8f-leandrotvrs-projects.vercel.app
https://operandi-aj3w6wkgj-leandrotvrs-projects.vercel.app
https://operandi-3pd8hj5iv-leandrotvrs-projects.vercel.app
https://operandi-o5f2wlp6p-leandrotvrs-projects.vercel.app
https://operandi-juk2huguk-leandrotvrs-projects.vercel.app
https://operandi-5p6lhjrti-leandrotvrs-projects.vercel.app
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Tomar la primera fila de deployments (ignorando encabezado)
PS C:\Users\Leandro Maciel\Documents\operandi> # Formato típico: Age  URL  Status  Environment  Duration  Username
PS C:\Users\Leandro Maciel\Documents\operandi> $line = ($ls | Select-Object -Skip 3 | Select-Object -First 1)
PS C:\Users\Leandro Maciel\Documents\operandi> if ($line) {
>>   # La URL suele estar en la 2da columna
>>   $parts = ($line -split '\s{2,}').Where({$_ -ne ""})
>>   $url   = $parts[1]
>>   $status= $parts[2]
>>   Write-Host "`nÚltimo deployment:" -ForegroundColor Cyan
>>   Write-Host "  URL: $url" -ForegroundColor Green
>>   Write-Host "  Estado: $status"
>>
>>   # Abrir en navegador si no está en Error
>>   if ($status -notmatch "Error") {
>>     try { Start-Process $url } catch {}
>>   } else {
>>     Write-Host "El estado figura con Error. Mostrando logs de build..." -ForegroundColor Yellow
>>     vercel inspect $url --logs
>>   }
>> } else {
>>   Write-Host "No pude parsear la lista de deployments. Abrí el dashboard de Vercel para ver el estado." -ForegroundColor Yellow
>> }

Último deployment:
  URL:
  Estado:
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> Write-Host "`n✔ Listo. Si el estado es 'Ready', tu sitio está online y usable." -ForegroundColor Green

✔ Listo. Si el estado es 'Ready', tu sitio está online y usable.
PS C:\Users\Leandro Maciel\Documents\operandi> Write-Host "   Probar: /  /login  /cv.html  /api/cv" -ForegroundColor Green
   Probar: /  /login  /cv.html  /api/cv
PS C:\Users\Leandro Maciel\Documents\operandi> cd "C:\Users\Leandro Maciel\Documents\operandi"
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Quitar BOM y reescribir package.json en UTF-8 sin BOM
PS C:\Users\Leandro Maciel\Documents\operandi> $content = Get-Content .\package.json -Raw
PS C:\Users\Leandro Maciel\Documents\operandi> $clean   = $content.TrimStart([char]0xFEFF)
PS C:\Users\Leandro Maciel\Documents\operandi> $utf8NoBom = New-Object System.Text.UTF8Encoding($false)
PS C:\Users\Leandro Maciel\Documents\operandi> [System.IO.File]::WriteAllText(".\package.json", $clean, $utf8NoBom)
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Validar que parsea bien
PS C:\Users\Leandro Maciel\Documents\operandi> Get-Content .\package.json -Raw | ConvertFrom-Json | Out-Null
PS C:\Users\Leandro Maciel\Documents\operandi> Write-Host "✅ package.json limpio y válido." -ForegroundColor Green
✅ package.json limpio y válido.
PS C:\Users\Leandro Maciel\Documents\operandi>
PS C:\Users\Leandro Maciel\Documents\operandi> # Commit y push para que Vercel redeploye
PS C:\Users\Leandro Maciel\Documents\operandi> git add package.json
PS C:\Users\Leandro Maciel\Documents\operandi> git commit -m "fix: limpiar BOM en package.json para deploy en Vercel"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   logs.txt
        modified:   package-lock.json

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Leandro Maciel\Documents\operandi> git push origin master
Everything up-to-date
PS C:\Users\Leandro Maciel\Documents\operandi>